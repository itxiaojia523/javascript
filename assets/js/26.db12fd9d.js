(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{427:function(n,r,e){"use strict";e.r(r);var a=e(2),t=Object(a.a)({},(function(){var n=this,r=n._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("p",[n._v("函数\n函数的声明方式")]),n._v(" "),r("ol",[r("li",[n._v("利用函数关键字自定义函数（命名函数）： function 函数名(){}")]),n._v(" "),r("li",[n._v("函数表达式（匿名函数）：var 变量名 = function(){}")])]),n._v(" "),r("p",[n._v("JS引擎运行JS分两步：预解析和代码执行\n预解析:\t会把var和function提升到当前作用域的最前面\n变量预解析（变量提升）\n只提升变量声明不提升赋值\n函数预解析（函数提升）")]),n._v(" "),r("p",[n._v("代码执行：\n按照代码书写顺序从上向下执行")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[n._v("//问1\nconsole.log(num) // num is not defined 报错\n//问2\nconsole.log(num) // undefined\nvar num = 10;\n相当于\nvar num\nconsole.log(num)// undefined\nnum = 10\n\n//问3\nfn() //为什么能调用\nfunction fn(){\n  console.log(11)\n}\n相当于\nfunction fn(){}\nfn()\n\n//问4\nfun() //fun is not a function 报错\nvar fun = function(){\n  console.log(22)\n}\n相当于\nvar fun\nfun() //fun is not a function 报错\nfun = function(){}\n")])])]),r("p",[n._v("案例！\nvar num = 10\nfunction fun(){\nconsole.log(num) //undefined\nvar num = 20\n}\nfun()\n//相当于\nvar num\nfunction fun(){\nvar num\nconsole.log(num) //undefined\nnum = 20\n}\nnum = 10\nfun()")]),n._v(" "),r("p",[n._v("封装的函数")]),n._v(" "),r("p",[n._v("//新建一个数组，存入1-100的整数\nvar arr = []\nfor (i = 0; i < 100; i++){\narr[i] = i + 1;\n}\nconsole.log(arr)")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[n._v("//取出大于等于10的数，并组成新的数组\nvar arr = [22,3,3,333,3,3,33,3,33,1,1,1,1,1,1,1,1,1,111]\nvar newArr =[]\nvar j = 0\nfor (i = 0; i < arr.length; i++){\n  if (arr[i] >= 10){\n    newArr[j] = arr[i]\n    j++\n  }\n}\nconsole.log(newArr)\n")])])]),r("p",[n._v("或者 newArr.length 默认0\nvar arr = [22,3,3,333,3,3,33,3,33,1,1,1,1,1,1,1,1,1,111]\nvar newArr =[]\nfor (i = 0; i < arr.length; i++){\nif (arr[i] >= 10){\nnewArr[newArr.length] = arr[i]\n//newArr.push(arr[i])\n}\n}\nconsole.log(newArr)")]),n._v(" "),r("p",[n._v("// 返回当前日期和星期\nvar date = new Date()\nvar year = date.getFullYear()\nvar month = date.getMonth() + 1 //返回当月(0-11)\nvar dates = date.getDate()\nvar arr = ['星期日','星期一','星期二','星期三','星期四','星期五','星期六']\nvar day = date.getDay() //返回0-6  表星期\nconsole.log('今天是：' + year + '年' + month + '月' + dates + '日 ' + arr[day])")]),n._v(" "),r("p",[n._v("//封装到函数，返回当前的时分秒，格式 08:07:08\nfunction getTimer(){\nvar time = new Date()\n//0-10秒返回 0-10\nvar hour = time.getHours()\nhour = hour < 10 ? '0' + hour : hour\nvar mi = time.getMinutes()\nmi = mi < 10 ? '0' + mi : mi\nvar sec = time.getSeconds()\nsec = sec < 10 ? '0' + sec : sec\nreturn hour + ':' + mi + ':' + sec\n}\nconsole.log(getTimer())")]),n._v(" "),r("p",[n._v("倒计时函数\nfunction countDown(time){\nvar nowTime = +new Date()\nvar inputTime = +new Date(time)\nvar times = (inputTime - nowTime) / 1000\nvar d = parseInt(times / 3600 / 24)\nd = d < 10? '0' + d : d\nvar h = parseInt(times / 3600 % 24)\nh = h < 10? '0' + h : h\nvar m = parseInt(times / 60 % 60)\nm = m < 10? '0' + m : m\nvar s = parseInt(times % 60)\ns = s < 10? '0' + s : s\nreturn d + '天' + h + '时' + m + '分' + s + '秒'\n}\nconsole.log(countDown('2021-5-21 18:00:00'))")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[n._v("//求任意个数的最大值\nfunction getMax(){\n  // arguments是伪数组，存储所有的实参;只有函数有 arguments\n  var max = arguments[0]\n  for (var i = 0; i < arguments.length; i++){\n    max = max > arguments[i]? max:arguments[i]\n  }\n  // return的意思：函数名() = return后的内容 将return后的数据赋值给这个函数\n  return max\n}\nconsole.log(getMax(11,23,5))\nconsole.log(getMax(11,23,5,155))\n\n//翻转数据\nvar arr = [22,33,1,111]\nfunction reverse(arr){\n  var newArr = []\n  for(i = arr.length - 1; i >= 0; i--){\n    newArr[newArr.length] = arr[i]\n  }\n  return newArr\n}\nconsole.log(reverse(arr))\n\n//冒泡排序，将一系列数据按一定顺序排列（小到大或大到小）\n    //从小到大排列\nvar arr1 = [1,4,5,2,3]\nfunction sort(arr) {\n  for (i = 0; i < arr.length - 1; i++) {\n    for (j = 0; j < arr.length - 1 - i; j++) {\n      if (arr[j] > arr[j + 1]) {\n        var temp = arr[j]\n        arr[j] = arr[j + 1]\n        arr[j + 1] = temp\n      }\n    }\n  }\n  return arr\n}\n// return的意思：函数名() = return后的内容 将return后的数据赋值给这个函数\nvar result = sort(arr1)\nconsole.log(result)\n\n//判断闰年\nfunction isRun(year) {\n  var flag = false\n  if (year % 4 == 0 & year % 100 != 0 || year % 400 == 0){\n    flag = true\n  }\n  return flag\n}\nvar result = isRun(2008)\nconsole.log(result)\n\n\n//查找字符串中所有c出现的位置和次数\nvar str = 'abcacc'\nvar index = str.indexOf('c')\nvar count = 0\nfor (var i = 0; i < str.length; i++){\n  if (index != -1){\n    console.log(index)\n    index = str.indexOf('c', index + 1)\n    count += 1\n  }\n}\nconsole.log(count)\t\n\n//判断一个字符串中出现次数最多的字符，并统计次数\n//算法：1.charAt遍历 2.将字符存给一个对象 3.判断对象是否有该属性，没有为1，有则+1 4.遍历新对象，获取最大值\nvar str = 'abcddeeffggg'\nvar obj = {}\nfor (var i = 0; i < str.length; i++) {\n    var chars = str.charAt(i)\n    if (obj[chars]){\n      obj[chars]++\n    }else{\n      obj[chars] = 1\n    }\n}\nvar max = 0\nvar ch = ''\nfor (var k in obj){\n  if (obj[k] > max){\n    max = obj[k]\n    ch = k\n  }\n}\nconsole.log('出现最多为'+ch+'次数为：'+max)")])])])])}),[],!1,null,null,null);r.default=t.exports}}]);