(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{438:function(n,t,s){"use strict";s.r(t);var e=s(2),o=Object(e.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("算术运算符\n%：取余 主要用来判断一个数是否能被整除 余数为0\n前置递增：先+1，再返回值\n后置递增：先返回原值，再+1;即 a =2; a++ =1;（用更多）")]),this._v(" "),n("p",[this._v("比较运算符：\nconsole.log(18 == '18') true 会默认转型\nconsole.log(18 === '18') false 表全等\n逻辑运算符：\n&& || !\n*（重要）短路运算（逻辑中断）：当有多个表达式（值）时，左边的表达式可以确定结果时，就不再继续运算\n1.逻辑与 语法：表达式1 && 表达式2\n如果表达式1的值为true，则返回表达式2\n如果表达式1的值为false,即可确定结果，则返回表达式1\n赋值运算符：\n= += -= *= ...\n一元运算符： a++ a--\n二元运算符： a + b\n三元运算符：条件表达式？ 表达式1：表达式2\n如果条件表达式为真，返回1的值；假，返回2的值\nex.\nvar num = 10;\nvar result = 5>10? \"yes\":\"no\"\nconsole.log(result) //no")])])}),[],!1,null,null,null);t.default=o.exports}}]);